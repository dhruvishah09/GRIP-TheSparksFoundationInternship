<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (owid-covid-data)' inline='true' name='federated.1nunb7v0ehvqq8112hjgn0uuplg4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='excel-direct.1elgppn0n7sb8417ltr5619xluwp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/DataScience/TSFInternship/Task3 - Covid-19/owid-covid-data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1elgppn0n7sb8417ltr5619xluwp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BO10001:no:A1:BO10001:0' header='yes' outcome='2'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='total_boosters' ordinal='37' />
            <column datatype='integer' name='new_vaccinations' ordinal='38' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='45' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
            <column datatype='real' name='stringency_index' ordinal='47' />
            <column datatype='integer' name='population' ordinal='48' />
            <column datatype='real' name='population_density' ordinal='49' />
            <column datatype='real' name='median_age' ordinal='50' />
            <column datatype='real' name='aged_65_older' ordinal='51' />
            <column datatype='real' name='aged_70_older' ordinal='52' />
            <column datatype='real' name='gdp_per_capita' ordinal='53' />
            <column datatype='real' name='extreme_poverty' ordinal='54' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='55' />
            <column datatype='real' name='diabetes_prevalence' ordinal='56' />
            <column datatype='real' name='female_smokers' ordinal='57' />
            <column datatype='real' name='male_smokers' ordinal='58' />
            <column datatype='real' name='handwashing_facilities' ordinal='59' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='60' />
            <column datatype='real' name='life_expectancy' ordinal='61' />
            <column datatype='real' name='human_development_index' ordinal='62' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='63' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='64' />
            <column datatype='real' name='excess_mortality' ordinal='65' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='66' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1elgppn0n7sb8417ltr5619xluwp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BO10001:no:A1:BO10001:0' header='yes' outcome='2'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='total_boosters' ordinal='37' />
            <column datatype='integer' name='new_vaccinations' ordinal='38' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='45' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
            <column datatype='real' name='stringency_index' ordinal='47' />
            <column datatype='integer' name='population' ordinal='48' />
            <column datatype='real' name='population_density' ordinal='49' />
            <column datatype='real' name='median_age' ordinal='50' />
            <column datatype='real' name='aged_65_older' ordinal='51' />
            <column datatype='real' name='aged_70_older' ordinal='52' />
            <column datatype='real' name='gdp_per_capita' ordinal='53' />
            <column datatype='real' name='extreme_poverty' ordinal='54' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='55' />
            <column datatype='real' name='diabetes_prevalence' ordinal='56' />
            <column datatype='real' name='female_smokers' ordinal='57' />
            <column datatype='real' name='male_smokers' ordinal='58' />
            <column datatype='real' name='handwashing_facilities' ordinal='59' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='60' />
            <column datatype='real' name='life_expectancy' ordinal='61' />
            <column datatype='real' name='human_development_index' ordinal='62' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='63' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='64' />
            <column datatype='real' name='excess_mortality' ordinal='65' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='66' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BO10001:no:A1:BO10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column aggregate-role-from='[location]' caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='real' name='[excess_mortality]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative' datatype='real' name='[excess_mortality_cumulative]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='real' name='[excess_mortality_cumulative_absolute]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='real' name='[excess_mortality_cumulative_per_million]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='integer' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Boosters' datatype='integer' name='[total_boosters]' role='measure' type='quantitative' />
      <column caption='Total Boosters Per Hundred' datatype='real' name='[total_boosters_per_hundred]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations_per_hundred]' derivation='Sum' name='[sum:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Continent, Location'>
          <field>[continent]</field>
          <field>[location]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_vaccinations_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_tests:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_CE52CFF4F9B14D72A9342CDE11059CFC'>
            <properties context=''>
              <relation connection='excel-direct.1elgppn0n7sb8417ltr5619xluwp' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:BO10001:no:A1:BO10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='integer' name='total_deaths' ordinal='7' />
                  <column datatype='integer' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='integer' name='icu_patients' ordinal='17' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='integer' name='hosp_patients' ordinal='19' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='integer' name='new_tests' ordinal='25' />
                  <column datatype='integer' name='total_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='integer' name='total_vaccinations' ordinal='34' />
                  <column datatype='integer' name='people_vaccinated' ordinal='35' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='integer' name='total_boosters' ordinal='37' />
                  <column datatype='integer' name='new_vaccinations' ordinal='38' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='39' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
                  <column datatype='real' name='total_boosters_per_hundred' ordinal='43' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='44' />
                  <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='45' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
                  <column datatype='real' name='stringency_index' ordinal='47' />
                  <column datatype='integer' name='population' ordinal='48' />
                  <column datatype='real' name='population_density' ordinal='49' />
                  <column datatype='real' name='median_age' ordinal='50' />
                  <column datatype='real' name='aged_65_older' ordinal='51' />
                  <column datatype='real' name='aged_70_older' ordinal='52' />
                  <column datatype='real' name='gdp_per_capita' ordinal='53' />
                  <column datatype='real' name='extreme_poverty' ordinal='54' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='55' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='56' />
                  <column datatype='real' name='female_smokers' ordinal='57' />
                  <column datatype='real' name='male_smokers' ordinal='58' />
                  <column datatype='real' name='handwashing_facilities' ordinal='59' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='60' />
                  <column datatype='real' name='life_expectancy' ordinal='61' />
                  <column datatype='real' name='human_development_index' ordinal='62' />
                  <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='63' />
                  <column datatype='real' name='excess_mortality_cumulative' ordinal='64' />
                  <column datatype='real' name='excess_mortality' ordinal='65' />
                  <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='66' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Death per continent '>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1nunb7v0ehvqq8112hjgn0uuplg4' />
          </datasources>
          <datasource-dependencies datasource='federated.1nunb7v0ehvqq8112hjgn0uuplg4'>
            <column aggregate-role-from='[location]' caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:continent:nk]' to='&quot;South America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9450275897979736' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_deaths:qk]</rows>
        <cols>([federated.1nunb7v0ehvqq8112hjgn0uuplg4].[yr:date:ok] / ([federated.1nunb7v0ehvqq8112hjgn0uuplg4].[qr:date:ok] / [federated.1nunb7v0ehvqq8112hjgn0uuplg4].[mn:date:ok]))</cols>
        <pages>
          <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{0FC27C14-717E-4098-B050-66CF7696E010}' />
    </worksheet>
    <worksheet name='Total Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1nunb7v0ehvqq8112hjgn0uuplg4' />
          </datasources>
          <datasource-dependencies datasource='federated.1nunb7v0ehvqq8112hjgn0uuplg4'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations_per_hundred]' derivation='Sum' name='[sum:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_vaccinations_per_hundred:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tdy:date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[tdy:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tdy:date:ok]</column>
            <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_vaccinations_per_hundred:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_deaths:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>([federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_deaths:qk] + [federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_deaths:qk])</rows>
        <cols>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[mn:date:ok]</cols>
        <pages>
          <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{908B8828-4FBB-4C82-AD09-EA7184CE9A1E}' />
    </worksheet>
    <worksheet name='Total cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1nunb7v0ehvqq8112hjgn0uuplg4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nunb7v0ehvqq8112hjgn0uuplg4'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tdy:date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[tdy:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tdy:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:location:nk]' />
              <size column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[Latitude (generated)]</rows>
        <cols>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{3E1F346C-582C-4F18-942A-8856BC461528}' />
    </worksheet>
    <worksheet name='Total cases,deth,test,vaccines'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1nunb7v0ehvqq8112hjgn0uuplg4' />
          </datasources>
          <datasource-dependencies datasource='federated.1nunb7v0ehvqq8112hjgn0uuplg4'>
            <column aggregate-role-from='[location]' caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
            <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:continent:nk]' to='&quot;South America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_vaccinations:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tdy:date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[tdy:date:ok]' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]</column>
            <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tdy:date:ok]</column>
            <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_vaccinations:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_tests:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_vaccinations:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]</rows>
        <cols>([federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_tests:qk] + ([federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_cases:qk] + ([federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_deaths:qk] + [federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_vaccinations:qk])))</cols>
        <pages>
          <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{31DD3FB2-BD63-47AB-8797-48157B6AA7B6}' />
    </worksheet>
    <worksheet name='Vaccinated people'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1nunb7v0ehvqq8112hjgn0uuplg4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nunb7v0ehvqq8112hjgn0uuplg4'>
            <column aggregate-role-from='[location]' caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:people_fully_vaccinated:qk]' included-values='in-range'>
            <min>113</min>
            <max>642810141628</max>
          </filter>
          <filter class='categorical' column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tdy:date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[tdy:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:people_fully_vaccinated:qk]</column>
            <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tdy:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[Longitude (generated)]' field-type='quantitative' max='27168824.166140705' min='-12906192.51943779' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[Latitude (generated)]' field-type='quantitative' max='12997520.622077778' min='-8799169.2060948666' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:people_fully_vaccinated:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_vaccinations:qk]' />
              <lod column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]' />
              <lod column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:location:nk]' />
              <geometry column='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[Latitude (generated)]</rows>
        <cols>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{E90EE44C-9DD6-46DC-942A-C12FDD2A7045}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='24'>Covid - 19 Timeline [2019-2022]</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d4d4d46d' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97484' id='30' param='horz' type-v2='layout-flow' w='98614' x='693' y='1258'>
            <zone h='97484' id='18' param='vert' type-v2='layout-flow' w='98614' x='693' y='1258'>
              <zone fixed-size='29' h='5818' id='19' is-fixed='true' type-v2='title' w='98614' x='693' y='1258'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='91666' id='14' param='horz' type-v2='layout-flow' w='98614' x='693' y='7076'>
                <zone h='91666' id='5' type-v2='layout-basic' w='98614' x='693' y='7076'>
                  <zone h='39815' id='10' name='Total Death' w='47296' x='52011' y='58927'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='51851' id='11' name='Vaccinated people' w='27202' x='31312' y='7076'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='51851' id='12' name='Total cases' w='30619' x='693' y='7076'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='39815' id='9' name='Death per continent ' w='51318' x='693' y='58927'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='51851' id='3' name='Total cases,deth,test,vaccines' w='40793' x='58514' y='7076'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone count='4' h='6926' id='16' name='Total cases' name1='Death per continent ' name2='Total Death' name3='Total cases,deth,test,vaccines' name4='Vaccinated people' synchronized='1' type-v2='currpage' w='41905' x='57835' y='1182' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='24'>Covid - 19 Timeline [2019-2022]</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97484' id='33' param='vert' type-v2='layout-flow' w='98614' x='693' y='1258'>
                <zone fixed-size='29' h='5818' id='19' type-v2='title' w='98614' x='693' y='1258'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51851' id='12' is-fixed='true' name='Total cases' w='30619' x='693' y='7076'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51851' id='11' is-fixed='true' name='Vaccinated people' w='27202' x='31312' y='7076'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51851' id='3' is-fixed='true' name='Total cases,deth,test,vaccines' w='40793' x='58514' y='7076'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39815' id='9' is-fixed='true' name='Death per continent ' w='51318' x='693' y='58927'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39815' id='10' is-fixed='true' name='Total Death' w='47296' x='52011' y='58927'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='4' h='6926' id='16' name='Total cases' name1='Death per continent ' name2='Total Death' name3='Total cases,deth,test,vaccines' name4='Vaccinated people' synchronized='1' type-v2='currpage' w='41905' x='57835' y='1182'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{92477285-649B-4143-A11D-CA8E4046E4A4}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Death per continent '>
          <current-page>
            <multibucket>
              <bucket>#2021-04-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Total Death'>
          <current-page>
            <multibucket>
              <bucket>#2021-04-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total cases'>
          <current-page>
            <multibucket>
              <bucket>#2021-04-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total cases,deth,test,vaccines'>
          <current-page>
            <multibucket>
              <bucket>#2021-04-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='fit-height' />
          <highlight field='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Vaccinated people'>
          <current-page>
            <multibucket>
              <bucket>#2021-04-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B9E0BE8F-1779-4622-9ABD-9C2A71799924}' />
    </window>
    <window class='worksheet' name='Total cases,deth,test,vaccines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-09-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{EB887853-374B-4994-8C03-CAC45F29ABED}' />
    </window>
    <window class='worksheet' name='Death per continent '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-02-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[none:continent:nk]</field>
            <field>[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E055893-06DD-4408-9905-95E80850FB9C}' />
    </window>
    <window class='worksheet' name='Total Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-12-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{B603EF41-E180-46C7-9204-3B9A2FAC8847}' />
    </window>
    <window class='worksheet' name='Vaccinated people'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_vaccinations:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-02-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{0894E2CA-DE1D-4853-B2E1-296E0354542E}' />
    </window>
    <window class='worksheet' name='Total cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1nunb7v0ehvqq8112hjgn0uuplg4].[sum:total_cases:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-02-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{D7C662CF-E56C-48AA-B493-9390D5FD48A7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death per continent ' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Total Death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total cases' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total cases,deth,test,vaccines' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vaccinated people' width='192'>
      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
      H3PCm8n/D2dnFyud27jIAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
